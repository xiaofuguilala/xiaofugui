
输入一棵二叉树，判断该二叉树是否是平衡二叉树。

创建二叉树代码：
public  TreeNode CreateTree(TreeNode root){
        Scanner scanner = new Scanner(System.in);
        //输入值
        String val;
        System.out.println("请输入节点");
        val = scanner.next(); //输入一个字符串，以空格隔开
        //每次
        if(val.equals("#")) { //输入#表示该节点为空
            return null;
        }
        root = new TreeNode(Integer.parseInt(val));
        root.left = CreateTree(root.left);
        root.right = CreateTree(root.right);
        return root;
        //声明一棵树的对象root
    }
    
    
    

  public boolean IsBalanced_Solution(TreeNode root) {
        
        //首先要是一颗二叉排序树(左节点的值小于根节点，根节点的值小于右节点)，
        //其次左子树和右子树的深度之差不超过1
        
        //思路：递归遍历，不过是从底向上遍历，每到达一个节点计算高度进行比较，如果高度差大于1，则直接返回
        //否则继续递归返回到头节点，判断左右子树的高度差
        
        return getDeepth(root) !=-1;
    }
    
    public int getDeepth(TreeNode root){
        if(root ==null) return 0;
        
        int leftVal = getDeepth(root.left);
        if(leftVal==-1) return -1;
        
        int rightVal = getDeepth(root.right);
        if(rightVal==-1) return -1;
        
        return Math.abs(leftVal - rightVal) > 1?-1:1+Math.max(leftVal,rightVal);
    }
