
题目描述
输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，并保证奇数和奇数，偶数和偶数之间的相对位置不变。

import java.util.*;
 public void reOrderArray(int [] array) {
       
       ArrayList <Integer> oldlist= new ArrayList<Integer>();  
       ArrayList <Integer> evenlist= new ArrayList<Integer>();
        for(int i=0;i<array.length;i++){
            if(array[i]%2==0){
                oldlist.add(array[i]);
            }
            else{
              evenlist.add(array[i]);  
            }
        }
        
        evenlist.addAll(oldlist);
        for(int i=0;i<evenlist.size();i++){
            array[i]=evenlist.get(i);
        }
    }
    
    
    
    方法二：
    public void reOrderArray(int [] array) {
       
      for (int i = 0; i < array.length - 1; i++) { 
            for (int j = 0; j < array.length - 1 - i; j++) { 
                // 前偶后奇数就交换 
                if ((array[j] & 1) == 0 && (array[j + 1] & 1) == 1) { 
                    array[j] = array[j] ^ array[j + 1]; 
                    array[j + 1] = array[j] ^ array[j + 1]; 
                    array[j] = array[j] ^ array[j + 1]; 
                } 
            } 
        } 
    }
