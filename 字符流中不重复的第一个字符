

//请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符"go"时，
第一个只出现一次的字符是"g"。当从该字符流中读出前六个字符“google"时，第一个只出现一次的字符是"l"。
 
 
 思路：和字符串中不重复的字符是一样的套路。首先声明一个数组存加入字符出现的次数，每次加入一个字符就进行计数，存储在以字符为下标的数组中
 ，然后遍历次数为1的就是第一次出现的字符。
     char[] hash = new char[256];
    StringBuilder sb = new StringBuilder();
    //Insert one char from stringstream
    public void Insert(char ch)
    {
         sb.append(ch);
        hash[ch]++;
        
    }
  //return the first appearence once char in current stringstream
    public char FirstAppearingOnce()
    {
         int size = sb.length();
        for(int i=0;i<size;i++){
            if(hash[sb.charAt(i)]==1){
                return sb.charAt(i);
            }
        }
        return '#';
    }
