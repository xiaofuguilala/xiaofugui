题目描述
地上有一个m行和n列的方格。一个机器人从坐标0,0的格子开始移动，每一次只能向左，右，上，下四个方向移动一格，、
但是不能进入行坐标和列坐标的数位之和大于k的格子。
例如，当k为18时，机器人能够进入方格（35,37），因为3+5+3+7 = 18。但是，它不能进入方格（35,38），因为3+5+3+8 = 19。请问该机器人能够达到多少个格子？

思路 从0，0开始，然后进入一个格子判断三个条件：是否在矩阵内，是否满足数位之和小于阈值，是否是走过得格子，如果满足则上下左右进行寻找。

  public int movingCount(int threshold, int rows, int cols)
    {
        boolean flag[][] = new boolean[rows][cols]; //记录是否已经走过
        return helper(0, 0, rows, cols, flag, threshold);
    }
    
   public int helper(int i,int j,int rows,int cols,boolean [][]flag,int threshold){
       if(i<0||j<0||i>=rows||j>=cols|| getDigitSum(i)+getDigitSum(j)>threshold ||flag[i][j])
           return 0;
       flag[i][j] = true;
       return helper(i-1,j,rows,cols,flag,threshold)
           +  helper(i+1,j,rows,cols,flag,threshold)
           +  helper(i,j-1,rows,cols,flag,threshold)
           +  helper(i,j+1,rows,cols,flag,threshold)+1;
   }
    public int getDigitSum(int number){
        int sum = 0;
        while(number > 0){
            sum += number%10;
            number /= 10;
        }
        return sum;
    }
