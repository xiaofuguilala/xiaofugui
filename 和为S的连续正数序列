



小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。但是他并不满足于此,
他在想究竟有多少种连续的正数序列的和为100(至少包括两个数)。
没多久,他就得到另一组连续正数和为100的序列:18,19,20,21,22。现在把问题交给你,你能不能也很快的找出所有和为S的连续正数序列? Good Luck!

思路：
叫做双指针技术，就是相当于有一个窗口，窗口的左右两边就是两个指针，我们根据窗口内值之和来确定窗口的位置和宽度。

 public ArrayList<ArrayList<Integer> > FindContinuousSequence(int sum) {
       
       ArrayList<ArrayList<Integer> > result = new ArrayList<>();
        
        //声明两个指针，进行窗口移动，因为是一个连续的空间，
        //所以求和公式为（plow+phigh）*(phigh-plow+1)/2,如果当前的和与sum相同，则记录，
        //如果大于sum了，左边的窗口右移；如果小于sum,右边的窗口右移
        int plow=1;
        int phigh = 2;
        
        while(plow < phigh){
            ArrayList<Integer> list = new ArrayList<Integer>();
            
            int cur = (plow+phigh)*(phigh-plow+1)/2;
            if(cur == sum){
                for(int i=plow;i<=phigh;i++){
                    list.add(i);
                }
                 result.add(list);
                 plow++;
            }else if(cur < sum){
                phigh++;
            }else{
                plow++;
            }
           
        }
        
        return result;
    }
