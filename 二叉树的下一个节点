题目描述
给定一个二叉树和其中的一个结点，请找出中序遍历顺序的下一个结点并且返回。注意，树中的结点不仅包含左右子结点，同时包含指向父结点的指针。

  public TreeLinkNode GetNext(TreeLinkNode pNode)
    {
        /**
        链接：https://www.nowcoder.com/questionTerminal/9023a0c988684a53960365b889ceaf5e
来源：牛客网

    分析二叉树的下一个节点，一共有以下情况：
    1.二叉树为空，则返回空；
    2.节点右孩子存在，则设置一个指针从该节点的右孩子出发，一直沿着指向左子结点的指针找到的叶子节点即为下一个节点；
    3.节点不是根节点。如果该节点是其父节点的左孩子，则返回父节点；
    否则继续向上遍历其父节点的父节点，重复之前的判断，返回结果。代码如下：2种情况也能得出
        **/
        if(pNode == null) return null;
         TreeLinkNode res;
      if(pNode.right == null){
            res = pNode;
          //一个节点没有右子树，并且是他父节点的右子节点，父节点的左子节点的节点是下一个节点
            while(res.next != null && res.next.right == res){
                res = res.next;
            }
            return res.next;
        }
        //右子树节点不为空。
        res = pNode.right;
        while(res.left != null){
            res = res.left;
        }
        return res;
    }
