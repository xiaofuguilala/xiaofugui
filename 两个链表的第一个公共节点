思路：第一步：声明两个节点p1,p2指向头节点
第二步： p1,p2 向后走m步，使得p1指向pHead1的尾节点
第三步： p1指向pHead2的头部
第四步： p1,p2 向后走m-n步，p2指向尾节点
第五步： p2指向p1的头节点，继续遍历



 public ListNode FindFirstCommonNode(ListNode pHead1, ListNode pHead2) {
        
        ListNode p1 = pHead1;
        ListNode p2 = pHead2;
        
       while(p1!=p2){
           
           //没用到达链表末尾，继续往后走
           if(p1!=null)p1 = p1.next;
           if(p2!=null) p2 = p2.next;
           
           判断两个节点是否相等
           if(p1 !=p2){
               
               如果p1到达尾节点，指向p2的头节点
               if(p1 ==null){
                     p1=pHead2;
               }
               如果p2到达尾节点，指向p1的头节点
               if(p2==null){
                   p2 = pHead1;
               }
           }
       }
        
        return p1;
    }
