
题目描述
输入一颗二叉树的跟节点和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。
路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。(注意: 在返回值的list中，数组长度大的数组靠前)

 ArrayList<ArrayList<Integer>> pathAll = new  ArrayList<ArrayList<Integer>>();//
     ArrayList<Integer> path = new ArrayList<Integer>();//存储单条路径
    public ArrayList<ArrayList<Integer>> FindPath(TreeNode root,int target) {
        //先序遍历 找到根节点 递归的本质为栈的压入和弹出
        if(root == null) return pathAll;
        //首先将根节点存储
        path.add(root.val);
        //判断是否==target
        target-=root.val;
        if(target ==0 && root.left==null && root.right==null){
        //如果找到，创建新的数组存入动态数组中
            pathAll.add(new ArrayList<Integer>(path));
        }
        //做节点不为空继续搜索
         FindPath(root.left,target);
         //有节点不为空继续搜索
         FindPath(root.right,target);
         //返回父节点
         path.remove(path.size() - 1);
        return pathAll;
    }
